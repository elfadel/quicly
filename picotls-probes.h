/* Generated by the Systemtap dtrace wrapper */


#define _SDT_HAS_SEMAPHORES 1


#define STAP_HAS_SEMAPHORES 1 /* deprecated */


#include <sys/sdt.h>

/* PICOTLS_NEW ( struct st_ptls_t *tls, int is_server ) */
#if defined STAP_SDT_V1
#define PICOTLS_NEW_ENABLED() __builtin_expect (new_semaphore, 0)
#define picotls_new_semaphore new_semaphore
#else
#define PICOTLS_NEW_ENABLED() __builtin_expect (picotls_new_semaphore, 0)
#endif
__extension__ extern unsigned short picotls_new_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define PICOTLS_NEW(arg1, arg2) \
DTRACE_PROBE2 (picotls, new, arg1, arg2)

/* PICOTLS_FREE ( struct st_ptls_t *tls ) */
#if defined STAP_SDT_V1
#define PICOTLS_FREE_ENABLED() __builtin_expect (free_semaphore, 0)
#define picotls_free_semaphore free_semaphore
#else
#define PICOTLS_FREE_ENABLED() __builtin_expect (picotls_free_semaphore, 0)
#endif
__extension__ extern unsigned short picotls_free_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define PICOTLS_FREE(arg1) \
DTRACE_PROBE1 (picotls, free, arg1)

/* PICOTLS_CLIENT_RANDOM ( struct st_ptls_t *tls, const void *bytes ) */
#if defined STAP_SDT_V1
#define PICOTLS_CLIENT_RANDOM_ENABLED() __builtin_expect (client_random_semaphore, 0)
#define picotls_client_random_semaphore client_random_semaphore
#else
#define PICOTLS_CLIENT_RANDOM_ENABLED() __builtin_expect (picotls_client_random_semaphore, 0)
#endif
__extension__ extern unsigned short picotls_client_random_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define PICOTLS_CLIENT_RANDOM(arg1, arg2) \
DTRACE_PROBE2 (picotls, client_random, arg1, arg2)

/* PICOTLS_RECEIVE_MESSAGE ( struct st_ptls_t *tls, uint8_t message, const void *bytes, size_t len, int result ) */
#if defined STAP_SDT_V1
#define PICOTLS_RECEIVE_MESSAGE_ENABLED() __builtin_expect (receive_message_semaphore, 0)
#define picotls_receive_message_semaphore receive_message_semaphore
#else
#define PICOTLS_RECEIVE_MESSAGE_ENABLED() __builtin_expect (picotls_receive_message_semaphore, 0)
#endif
__extension__ extern unsigned short picotls_receive_message_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define PICOTLS_RECEIVE_MESSAGE(arg1, arg2, arg3, arg4, arg5) \
DTRACE_PROBE5 (picotls, receive_message, arg1, arg2, arg3, arg4, arg5)

/* PICOTLS_NEW_SECRET ( struct st_ptls_t *tls, const char *label, const char *secret_hex ) */
#if defined STAP_SDT_V1
#define PICOTLS_NEW_SECRET_ENABLED() __builtin_expect (new_secret_semaphore, 0)
#define picotls_new_secret_semaphore new_secret_semaphore
#else
#define PICOTLS_NEW_SECRET_ENABLED() __builtin_expect (picotls_new_secret_semaphore, 0)
#endif
__extension__ extern unsigned short picotls_new_secret_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define PICOTLS_NEW_SECRET(arg1, arg2, arg3) \
DTRACE_PROBE3 (picotls, new_secret, arg1, arg2, arg3)

